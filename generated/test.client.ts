// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "test.proto" (package "sample", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { BusinessService } from "./test";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ModifyBusinessSimpleRes } from "./test";
import type { ModifyBusinessSimpleReq } from "./test";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Service definition
 *
 * @generated from protobuf service sample.BusinessService
 */
export interface IBusinessServiceClient {
    /**
     * @generated from protobuf rpc: ModifyBusiness(sample.ModifyBusinessSimpleReq) returns (sample.ModifyBusinessSimpleRes);
     */
    modifyBusiness(input: ModifyBusinessSimpleReq, options?: RpcOptions): UnaryCall<ModifyBusinessSimpleReq, ModifyBusinessSimpleRes>;
}
/**
 * Service definition
 *
 * @generated from protobuf service sample.BusinessService
 */
export class BusinessServiceClient implements IBusinessServiceClient, ServiceInfo {
    typeName = BusinessService.typeName;
    methods = BusinessService.methods;
    options = BusinessService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: ModifyBusiness(sample.ModifyBusinessSimpleReq) returns (sample.ModifyBusinessSimpleRes);
     */
    modifyBusiness(input: ModifyBusinessSimpleReq, options?: RpcOptions): UnaryCall<ModifyBusinessSimpleReq, ModifyBusinessSimpleRes> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ModifyBusinessSimpleReq, ModifyBusinessSimpleRes>("unary", this._transport, method, opt, input);
    }
}
